getcw()
getwd()
setwd("~/Documents/coursera/rprog")
getwd()
dir()
ls()
source("teste.R")
ls()
dir()
"teste.R"
source("teste2.R")
ls()
rm x, y
View(y)
View(y)
rm(x)
rm(y)
source("teste.R")
source("teste.R")
ls()
structure(list(a = c(1, 2, 4), b = structure(c(2L, 1L, 3L), .Label = c("1",
"a", "TRUE"), class = "factor"), c = structure(c(1L, 1L, 1L), class = "factor", .Label = "ola")), .Names = c("a",
"b", "c"), row.names = c(NA, -3L), class = "data.frame")
dget("teste.R")
z <- dget("teste.R")
getwd()
rm(z)
getwd()
z <- dget("teste.R")
z
getwd()
for(i in 1:14){ print(i)}
letters = c("a", "b", "c", "d")
for(i in letters){ print(i)}
seq_len(4)
args(paste)
add2 <- function(x,y){
x + y
}
add2(3,5)
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x, 12)
above <- function(x, n = 10){
use <- x > n
x[use]
}
above(x)
above(x, 12)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- means(y[, i])
}
means
}
x <- matrix(1:25, 5, 5)
x
columnmean(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean(x)
x[2,4] <- NA
x
x[5,3] <- NA
x[5,2] <- NA
x[1,2] <- NA
x
columnmean(x)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(x)
x
columnmean(x, FALSE)
m1 <- matrix(1:10, 5, 5)
m2 <- vector(5:10, 5)
v1 <- 5:10
class(v1)
m1*v1
v1 <- vector("numeric", 5:10)
v1 <- vector("numeric", 5)
v1
v1 <- 5:10
class(v1)
v1 <- vector("numeric", 5)
v1[1] <- 5
v1[2] <- 6
v1[3] <- 7
v1[4] <- 8
v1[5] <- 9
v1
m1*v1
m1
View(`m1`)
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
cube(3)
cube(2)
square <- make.power(2)
square(3)
ls(envronment(cube))
ls(environment(cube))
get("n", environment(cube))
get("pow", environment(cube))
m = matrix(1:4, 2, 2)
m
v <- 4:5
v
m %*% v
v %*% v
4*4 + 5*5
x <- as.Date("1970-01-01")
x
unclass(x)
x <- as.Date("1970-12-31")
unclass(x)
x <- as.Date("1971-01-01")
unclass(x)
months("2014-08-13")
months(as.Date("2014-08-13")
)
months(as.Date("2014-09-13")
months(as.Date("2014-09-13"))
months(as.Date("2014-09-13"))
months(as.Date("2014-091-13"))
months(as.Date("2014-01-13"))
weekdays(as.Date("2014-01-13"))
weekdays(as.Date("2014-08-13"))
quarters(as.Date("2014-08-13"))
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
names(unclass(p))
p$sec
p[[1]]
p[[2]]
p$min
unclass(p)
p
p[[1]]
x <- as.Date("2012-03-01") y <- as.Data("2012-02-28")
x <- as.Date("2012-03-01"); y <- as.Data("2012-02-28")
x <- as.Date("2012-03-01") y <- as.Date("2012-02-28")
x <- as.Date("2012-03-01"); y <- as.Date("2012-02-28")
x-y
x <- as.Date("2014-03-01"); y <- as.Date("2014-02-28")
x-y
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
lapply(x, mean)
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
x <- 1:$
x <- 1:4
lapply(x, runif)
lapply(x, runif, min = 0, max = 10)
?runif
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
lapply(x, function(elt) elt[,1])
sapply(x, function(elt) elt[,1])
sapply(x, mean)
lapply(x, mean)
str(mean)
str(apply)
str(max)
printmessage <- function(x) {}
printmessage <- function(x) {
if(x > 0){
print("x is greater than zero")
} else {
print("x is less or equal to zero")
}
#invisible(x)
}
printmessage(1)
printmessage <- function(x) {
if(x > 0){
print("x is greater than zero")
} else {
print("x is less or equal to zero")
}
invisible(x)
}
printmessage(1)
debug(lm)
lm(fg - fh)
library(datasets)
data(iris)
?iris
iris
x <- iris[, "Species"]
class(x)
vals <- irs[,1:4]
vals <- iris[, 1:4]
vals
spec <- iris[, "Species"]
spec
tapply(vals, spec, mean)
sepallength <- iris[, "Sepal.Length"]
sepallength
tapply(sepallength, spec, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
iris
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
? mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
cars
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls
debug(ls)
ls()
exit()
q()
quit
q
e
q
rm()
ls
ls()
rm("all")
rm(...)
rm()
rm("list=ls()")
rm(list = setdiff(ls(), lsf.str()))
rm(list=ls(all=TRUE))
x <- 1
library(datasets)
data(mtcars)
mtcars
setwd("/home/diogoas/ProgrammingAssignment2")
ls()
dir()
